import requests                 # for making HTTP requests
import json                     # library for handling JSON data
import time                     # module for sleep operation
from boltiot import Bolt        # importing Bolt from boltiot module

SSID = 'AC21XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' #You can find SID in your Twilio Dashboard
AUTH_TOKEN = '13XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' #You can find  on your Twilio Dashboard
FROM_NUMBER = '+1830XXXXXXX' #This is the no. generated by Twilio. You can find this on your Twilio Dashboard
TO_NUMBER = '+9195XXXXXXXXX' #This is your number. Make sure you are adding +91 in beginning
API_KEY = 'b0dXXXX-XXXX-XXXX-XXXX-ef8c3140XXXX' #This is your Bolt Cloud accout API key
DEVICE_ID = 'BOLTXXXXXXX' #This is the ID of your Bolt device
telegram_chat_id = "@temperature_alert_ap30090304"  # This is the channel ID of the created Telegram channel. Paste after @ symbol.
telegram_bot_id = "botXXXXXXXXXX:AAHXXXXXX-CM81oXXXXXXXXXXXXXXXXXXXX"  # This is the bot ID of the created Telegram Bot. Paste after bot text.
FRAME_SIZE = 10
MUL_FACTOR = 3



# This is a function for sending a text on Telegram which we'll call in our Temperature monitoring file
def send_telegram_message(message):
    """Sends message via Telegram"""
    url = "https://api.telegram.org/" + telegram_bot_id + "/sendMessage"
    data = {
        "chat_id": telegram_chat_id,
        "text": message
    }
    try:
        response = requests.request(
            "POST",
            url,
            params=data
        )
        print("This is the Telegram URL")
        print(url)
        print("This is the Telegram response")
        print(response.text)
        telegram_data = json.loads(response.text)
        return telegram_data["ok"]
    except Exception as e:
        print("An error occurred in sending the alert message via Telegram")
        print(e)
        return False
